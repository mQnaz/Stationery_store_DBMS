<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfpBBINJBgYUzOdAAAEsElEQVRYR73Xd8i/YxTH8cfeexPZ
        e4Ss7B1RRomSUURGyh+I4g+EUBKJjCTJyMrMzogI2Xuv7L3X53X3PU+X+7m/P5mn3j2/332fc65zX2dc
        13fiH8p0o7//uiwTVgmzd/8blnnDumH5sHCYLQwJH3zx+acyc1g7HBfOCQeH1UM/kJWDdxeE08OBYc3Q
        Chu29Pjik29rjJXFw7nhnfBb+DAwXDaUzBSOD2+FX0c8EQ4Ps4YSNmz54ItPvq0xKBxvFJ4LDPBVuDys
        F8gMYbFwRSgdCOK64AtnCYQNWz5Kj+8Nw4xhiswTdg/vhzL4ITwVdgxEnrcM94bSKR4KO4U5AmHDlo/S
        eTdsESrIP4icbRteDWXwU3gkeE443zk8GEqn8KwNgA1bPkrnpaBwx3bPEuHqINIvAgP5XiEQkdvmm0O7
        OG4MbQrYsOXj6/BB4NsaY4XxOuHIoLpV8FJB7ksU2tmB0ypCBXlCaIuQDVs+Lg4nB74Ht78V27NoUMUL
        ejAgvvSgIEitaJGVwpAsFFYL5sD0HowTlblIEOWmQbFtFvQ3J7qkL75wjVB5b2X+sEHQDRsH1S9IvqZ0
        AedeHhAuDfcEBaTazwu7Bu1nd2yhybd0WG7EkoFjhUxHKhTrVeGacHdQN6eF/cKqYTJdDNYKZwQt+GX4
        NnwfvgufhcvCVoGR7T8rPBleGXFnODXsEOYMAr4p8GUO8KdmPg3vBTWhHbtumC8ooJp+fTg5Khi/Frgy
        6JJWR6BvhlvD3mH74IPYtnrFx+GUYO2JXYItH1Lk+IGgHvSvNmoHS58fw11BoFLAlo8hXWtau9te2/hL
        sE3+ltInQd4U5dHBu59Hf1tnLd7R3TycGWx7vdOyUuvf1rR2lz9DwhbeFtrZLV/7h72CrTfV6Aq0dIZw
        VijoY0IdRrAbDq6Pgnqz9sSzQU4fDRYxAcvg9aCNDgmKzsL3hbdD6RQCeywoON3DxtnS1paPU5yCUAeC
        6wKgZAGt0u6Ac8GZrghNOx1xSXg6lE7h4FHddJ4JhwYz5bVQOm0APlQ6um2wHSLyoi2aN4JhJKdmunye
        HwRbOoUALgoCoHtYMFvkunTaFHwefMhkEVIQkUIpA3WhmPYMt4dppUDBvhj4UEt7BBPQR5ROW4QW16pd
        K9wQ2mOzUIT7hO2CiagDLCTPfV3bS58OXTb7jp71dXFH2Dp0w+DY8ELguN0B2+k+pw2PCNOaAb5McLZX
        /qWOLR993ZeDtDovunFo0IjaC8OkFDl9PGwT6DwcxrWgwNXR9WH94ELCtra8dOyUe4LzoxvFxGFky1wq
        +gsoHF/kyuZEE0QbZOFLLe6smDsowv4U/CbcEpwrU8TReW0Y+kJt6CDiWLoUW19H60nTXMGxflLo66h8
        9weH3xRZMZwY2kspfJmp5oZTJ50LaKsDz3YLdNSVW1U///7vue2fIn4wGBwOnOeDKega7TzXToRzXTMu
        AO/oEDZs+TCMDLL7g/oYutx0BeGy4YeD65OLhr8ukfWzSxo2CYaXRRVVdY1n3tVFgw3b8gU3KO8ni++v
        ijude6ICc9tRtLgwmBfetRfY/0x8lQnpxwdU/gLhfxXb2PI3ZGLid/Qt7mB28bVEAAAAAElFTkSuQmCC
</value>
  </data>
</root>